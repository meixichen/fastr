% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fastr_fit.R
\name{fastr_fit}
\alias{fastr_fit}
\title{Fit a latent factor model to single or multiple neuron spike trains}
\usage{
fastr_fit(
  data,
  dt,
  n_factor,
  init = NULL,
  method = "2step",
  lam = NULL,
  nu = 15,
  woodbury = TRUE,
  silent = FALSE,
  adfun_only = FALSE,
  simplified = TRUE,
  control = list(eval.max = 500, iter.max = 500),
  ignore_random = FALSE,
  ...
)
}
\arguments{
\item{data}{A \verb{n_cell x n_bin x n_trial} (multiple neurons)  or \verb{n_bin x n_trial}
(single neuron) array of binary spike trains. See details for if the spike train
data is in the form of spike times.}

\item{dt}{Scalar. Length of each time bin for time discretization of spike trains.}

\item{n_factor}{Integer. Number of independent factors in factor analysis.}

\item{init}{A named list of initial values for the parameter vectors \code{log_a} and
\code{log_k}  both of length \code{n_cell}, and the lower triangular entries of the loading
matrix \code{Lt} of length \code{n_cell*n_factor-n_factor*(n_factor-1)/2}.
Optionally the initial values of the latent path states can also be provided
in the list named as \code{x} which should be the same dimension as \code{data}.
It \code{x} is not provided, initial values will be generated by bridge sampling.
If \code{method="2steps"}, only the initial values for the lower triangular loading
matrix can to be provided in the form of \code{list(Lt = Lt_init_values)}. Default is
\code{list(Lt=rep(1, n_cell*n_factor-n_factor*(n_factor-1)/2))} if 2-step method is used,
or
\code{list(log_k=logk_mle, log_a=loga_mle, Lt=rep(1, n_cell*n_factor-n_factor*(n_factor-1)/2))} if joint method is used.}

\item{method}{Estimation method: "2step" or "joint".
Default is "2step" : the first step is estimating drift \code{a} and threshold \code{k}
marginally using an inverse Gaussian model for each neuron independently, and the
second step is estimating the factor loading matrix with \code{a_hat} and \code{k_hat} as
plug-ins the joint likelihood. "joint" method estimates all parameters jointly,
hence more computationally intensive.}

\item{lam}{Scalar. Penalization parameter for the loading matrix elements. Default
is \code{lam=ifelse(n_cell<10, 1, 0.5)}.}

\item{nu}{Scalar. Parameter that controls the "steepness" around 0 of the sigmoid
function applied at the spike data likelihood layer. Default is 15.}

\item{woodbury}{Use the Woodbury matrix identity to speed up the calculation of
the covariance matrix? Default is T.}

\item{silent}{Suppress model fitting messages?}

\item{adfun_only}{Only outputs of ADFun created by TMB? This is for debugging
purposes only.}

\item{simplified}{Should a simplified output be given? If true, the output
saves 80 times more space.}

\item{control}{A list of control parameters to pass to \code{nlminb()}.}

\item{ignore_random}{Ignore random effect? If TRUE, latent paths are not integrated
out in the model. This can be helpful for checking the marginal likelihood.}

\item{...}{Additional arguments to be passed to the optimization function
\code{nlminb()}}
}
\value{
A list of class \code{fastr_fit} containing the following objects:
\itemize{
\item time: time taken for model fitting in seconds,
\item rate_hat: estimates of the firing rates (alpha/k),
\item lam_hat: estimates of the inverse Gaussian lambda parameters,
\item se_ig (if simplified=FALSE): SEs of the IG parameters (rates and lambda),
\item log_a_hat: estimates of log drift parameters \code{a},
\item log_k_hat: estimates of log threshold parameters \code{k},
\item loga_se: standard errors of \code{log_a_hat},
\item logk_se: standard errors of \code{log_k_hat},
\item lmat_hat: estimate of the loading matrix L,
\item lmat_varimax: Varimax-transformed loading matrix estimate,
\item lmat_unnorm_hat: estimate of the unnormalized L
\item lmat_unnorm_cov: covariance matrix of the unnormalized L,
\item paths: point estimates of the latent paths. Use \verb{array(output$paths, c(n_cell,n_bin,n_trial)} to convert the estimated paths to an array format.
\item paths_se: corresponding standard errors for the paths.
\item env: Other objects in the environment created during model fitting. If
simplified=FALSE, TMB objects is included here.
}
}
\description{
Fit a latent factor model to single or multiple neuron spike trains
}
\details{
If the spike train data comes in the form of spike times, it can be
converted to the format accepted by \code{fastr_fit()} using the function \code{num2bin()}.
}
